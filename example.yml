openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: appointments
    description: CRUD for appointments
  - name: employees
    description: Accessing information about employees for services
  - name: categories
    description: Access and change product/service categories
  - name: services
    description: CRUD for services
  - name: products
    description: CRUD for products
  - name: product variations
    description: CRUD for product variations
paths:

# Appointments

  /{business_id}/appointments:
    post:
      tags:
        - appointments
      summary: Create a new appointment
      description: Create a new appointment with customer details, selected service, employee, and time.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                service_id:
                  type: integer
                customer_name:
                  type: string
                customer_email:
                  type: string
                customer_phone:
                  type: string
                start_time:
                  type: string
                  format: date-time
      responses:
        201:
          description: Appointment created successfully
        400:
          description: Invalid input data

  /{business_id}/appointments/{appointment_id}:
    get:
      tags:
        - appointments
      summary: Fetch appointment details by ID
      description: Fetch the details of an appointment by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: appointment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the appointment
      responses:
        200:
          description: Appointment details fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment_id:
                    type: integer
                    description: ID of the appointment
                  customer_name:
                    type: string
                    description: Name of the customer
                  customer_email:
                    type: string
                    description: Email of the customer
                  customer_phone:
                    type: string
                    description: Phone number of the customer
                  start_time:
                    type: string
                    format: date-time
                    description: Start time of the appointment
                  end_time:
                    type: string
                    format: date-time
                    description: End time of the appointment
                  employee_id:
                    type: integer
                    description: ID of the employee
                  service_id:
                    type: integer
                    description: ID of the service
        400:
          description: Invalid input data
        404:
          description: Appointment not found
    
    put:
      tags:
        - appointments
      summary: Modify an existing appointment
      description: Modify the details of an existing appointment, such as time, employee, and service.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: appointment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_id:
                  type: integer
                  description: ID of the employee
                service_id:
                  type: integer
                  description: ID of the service
                start_time:
                  type: string
                  format: date-time
                  description: The new start time of the appointment
                end_time:
                  type: string
                  format: date-time
                  description: The new end time of the appointment
                customer_name:
                  type: string
                  description: Name of the customer
                customer_email:
                  type: string
                  format: email
                  description: Email of the customer
                customer_phone:
                  type: string
                  description: Phone number of the customer
              required:
                - employee_id
                - service_id
                - start_time
                - end_time
                - customer_name
                - customer_email
                - customer_phone
      responses:
        200:
          description: Appointment updated successfully
        400:
          description: Invalid input data
        404:
          description: Appointment not found
        
    delete:
      tags:
        - appointments
      summary: Cancel an existing appointment
      description: Cancel an existing appointment by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: appointment_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the appointment
      responses:
        204:
          description: Appointment canceled successfully (No Content)
        400:
          description: Invalid input data
        404:
          description: Appointment not found
          
  # Employees for services
          
  /{business_id}/employees/available:
    get:
      tags:
        - employees
      summary: Get available employees for a specific time and service
      description: Get a list of all employees who are free at a specific time and can provide a particular service.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: time
          in: query
          required: true
          schema:
            type: string
            format: date-time
            example: "2024-10-15T10:00:00Z"
          description: The date and time when the service is requested
        - name: service_id
          in: query
          required: true
          schema:
            type: integer
          description: ID of the service to be provided
      responses:
        200:
          description: List of available employees
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    employee_id:
                      type: integer
                      description: ID of the employee
                    employee_name:
                      type: string
                      description: Name of the employee
                    
        400:
          description: Invalid input data
        404:
          description: No available employees found for the specified time and service
  
  /{business_id}/employees/{employee_id}/slots:
    get:
      tags:
        - employees
      summary: Get available time slots for a specific employee on a given day
      description: Retrieve a list of available time slots for a specific employee on a specific day, based on the duration of a particular service.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: employee_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the employee
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2024-10-15"
          description: Date for which to retrieve available time slots
        - name: service_id
          in: query
          required: true
          schema:
            type: integer
          description: ID of the service (used to calculate the duration of each time slot)
      responses:
        200:
          description: List of available time slots for the employee on the specified date
          content:
            application/json:
              schema:
                type: array
                description: List of available time slots for the employee
                items:
                  type: string
                  format: date-time
                  example: "2024-10-15T14:00:00Z"
                  description: Available time slot
        400:
          description: Invalid input data
        404:
          description: Employee or service not found


  /{business_id}/employees/{employee_id}/appointments:
    get:
      tags:
        - employees
      summary: Get all appointments for a specific employee on a specific day or week
      description: Retrieve a list of all appointments for a particular employee on a specific day or the entire week if no day is specified.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: employee_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the employee
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2024-10-15"
          description: Date for which to retrieve the appointments. If you want the appointments for a whole week, pass the start date of the week.
        - name: include_week
          in: query
          required: false
          schema:
            type: boolean
            example: true
          description: Set to `true` if you want to retrieve appointments for the entire week, starting from the provided date.
      responses:
        200:
          description: List of appointments for the employee on the specified day or week
          content:
            application/json:
              schema:
                type: array
                description: List of appointments for the employee
                items:
                  type: object
                  properties:
                    appointment_id:
                      type: integer
                      description: ID of the appointment
                    customer_name:
                      type: string
                      description: Name of the customer
                    service_id:
                      type: integer
                      description: ID of the service
                    service_name:
                      type: string
                      description: Name of the service (e.g., "Haircut", "Massage")
                    start_time:
                      type: string
                      format: date-time
                      description: Start time of the appointment
                    end_time:
                      type: string
                      format: date-time
                      description: End time of the appointment
        400:
          description: Invalid input data
        404:
          description: Employee not found or no appointments available

  # Category CRUD + access by category
  /{business_id}/categories:
    post:
      tags:
        - categories
      summary: Create a new category
      description: Add a new category for the business.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the category
      responses:
        201:
          description: Category created successfully
        400:
          description: Invalid input data
          
  /{business_id}/categories/{category_id}:
    get:
      tags:
        - categories
      summary: Get a specific category by ID
      description: Retrieve details of a specific category by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category
      responses:
        200:
          description: Category details retrieved successfully
        400:
          description: Invalid input
        404:
          description: Category not found
      
    put:
      tags:
        - categories
      summary: Update an existing category
      description: Modify the name or details of a category.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New name of the category
      responses:
        200:
          description: Category updated successfully
        400:
          description: Invalid input data
        404:
          description: Category not found

    delete:
      tags:
        - categories
      summary: Delete a category
      description: Remove a category by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category
      responses:
        204:
          description: Category deleted successfully
        400:
          description: Invalid input data
        404:
          description: Category not found

  /{business_id}/categories/all:
    get:
      tags:
        - categories
      summary: List all categories for a business
      description: Retrieve a list of all categories for a business.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
      responses:
        200:
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                description: List of categories
                items:
                  type: object
                  properties:
                    category_id:
                      type: integer
                      description: ID of the category
                    name:
                      type: string
                      description: Name of the category
        400:
          description: Invalid input
        404:
          description: No categories found
  
  /{business_id}/categories/{category_id}/services:
    get:
      tags:
        - categories
      summary: List all services for a category
      description: Retrieve a list of all services offered by the business in a specific category.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category
      responses:
        200:
          description: List of services for the category
          content:
            application/json:
              schema:
                type: array
                description: List of services
                items:
                  type: object
                  properties:
                    service_id:
                      type: integer
                      description: ID of the service
                    name:
                      type: string
                      description: Name of the service
                    description:
                      type: string
                      description: Description of the service
                    base_price:
                      type: number
                      format: integer
                    service_charge:
                      type: number
                      format: integer
                      description: Service charge
                    duration_minutes:
                      type: integer
                      description: Duration of the service in minutes
                    is_active:
                      type: boolean
                      description: Whether the service is currently active or available
        400:
          description: Invalid input
        404:
          description: No services found for the category

  # TO-DO get all products by category?

  # CRUD for services
  /{business_id}/services:
    post:
      tags:
        - services
      summary: Create a new service
      description: Add a new service for the business.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ID of the category the service belongs to
                name:
                  type: string
                  description: Name of the service
                description:
                  type: string
                  description: Detailed description of the service
                base_price:
                  type: number
                  format: decimal
                  description: Base price of the service
                duration_minutes:
                  type: integer
                  description: Duration of the service in minutes
                service_charge:
                  type: number
                  format: decimal
                  description: Additional service charge
                is_active:
                  type: boolean
                  description: Indicates whether the service is currently active
      responses:
        201:
          description: Service created successfully
        400:
          description: Invalid input data

  /{business_id}/services/{service_id}:
    get:
      tags:
        - services
      summary: Get a specific service by ID
      description: Retrieve details of a specific service by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: service_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the service
      responses:
        200:
          description: Service details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  service_id:
                    type: integer
                    description: ID of the service
                  category_id:
                    type: integer
                    description: ID of the category
                  name:
                    type: string
                    description: Name of the service
                  description:
                    type: string
                    description: Detailed description of the service
                  base_price:
                    type: number
                    format: decimal
                    description: Base price of the service
                  duration_minutes:
                    type: integer
                    description: Duration of the service in minutes
                  service_charge:
                    type: number
                    format: decimal
                    description: Additional service charge
                  is_active:
                    type: boolean
                    description: Indicates if the service is active
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        400:
          description: Invalid input
        404:
          description: Service not found

    put:
      tags:
        - services
      summary: Update an existing service
      description: Modify the details of an existing service.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: service_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ID of the category the service belongs to
                name:
                  type: string
                  description: Name of the service
                description:
                  type: string
                  description: Detailed description of the service
                base_price:
                  type: number
                  format: decimal
                  description: Base price of the service
                duration_minutes:
                  type: integer
                  description: Duration of the service in minutes
                service_charge:
                  type: number
                  format: decimal
                  description: Additional service charge
                is_active:
                  type: boolean
                  description: Indicates whether the service is currently active
      responses:
        200:
          description: Service updated successfully
        400:
          description: Invalid input data
        404:
          description: Service not found
          
    delete:
      tags:
        - services
      summary: Delete a service
      description: Remove a service by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: service_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the service
      responses:
        204:
          description: Service deleted successfully (No Content)
        400:
          description: Invalid input data
        404:
          description: Service not found


  # CRUD for product and product_variation
  
  /{business_id}/products:
    post:
      tags:
        - products
      summary: Create a new product
      description: Add a new product for the business.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ID of the category the product belongs to
                name:
                  type: string
                  description: Name of the product
                description:
                  type: string
                  description: Detailed description of the product
                base_price:
                  type: number
                  format: decimal
                  description: Base price of the product
                product_state:
                  type: string
                  enum: ['available', 'unavailable']
                  description: Availability state of the product
      responses:
        201:
          description: Product created successfully
        400:
          description: Invalid input data
          
  /{business_id}/products/{product_id}:
    get:
      tags:
        - products
      summary: Get a specific product by ID
      description: Retrieve details of a specific product by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      responses:
        200:
          description: Product details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_id:
                    type: integer
                    description: ID of the product
                  category_id:
                    type: integer
                    description: ID of the category
                  name:
                    type: string
                    description: Name of the product
                  description:
                    type: string
                    description: Detailed description of the product
                  base_price:
                    type: number
                    format: decimal
                    description: Base price of the product
                  product_state:
                    type: string
                    enum: ['available', 'unavailable']
                    description: Availability state of the product
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        400:
          description: Invalid input
        404:
          description: Product not found
          
          
    put:
      tags:
        - products
      summary: Update an existing product
      description: Modify the details of an existing product.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ID of the category the product belongs to
                name:
                  type: string
                  description: Name of the product
                description:
                  type: string
                  description: Detailed description of the product
                base_price:
                  type: number
                  format: decimal
                  description: Base price of the product
                product_state:
                  type: string
                  enum: ['available', 'unavailable']
                  description: Availability state of the product
      responses:
        200:
          description: Product updated successfully
        400:
          description: Invalid input data
        404:
          description: Product not found

    delete:
      tags:
        - products
      summary: Delete a product
      description: Remove a product by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      responses:
        204:
          description: Product deleted successfully (No Content)
        400:
          description: Invalid input data
        404:
          description: Product not found


  /{business_id}/products/{product_id}/variations:
    post:
      tags:
        - products
      summary: Create a new product variation
      description: Add a new variation to a product.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the variation
                price_modifier:
                  type: number
                  format: decimal
                  description: Price modifier for the variation
                product_state:
                  type: string
                  enum: ['available', 'unavailable']
                  description: Availability state of the product variation
      responses:
        201:
          description: Product variation created successfully
        400:
          description: Invalid input data
          
  /{business_id}/products/{product_id}/variations/{variation_id}:
    get:
      tags:
        - products
      summary: Get a specific product variation by ID
      description: Retrieve details of a specific product variation by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product variation
      responses:
        200:
          description: Product variation details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  variation_id:
                    type: integer
                    description: ID of the variation
                  product_id:
                    type: integer
                    description: ID of the product
                  name:
                    type: string
                    description: Name of the variation
                  price_modifier:
                    type: number
                    format: decimal
                    description: Price modifier for the variation
                  product_state:
                    type: string
                    enum: ['available', 'unavailable']
                    description: Availability state of the variation
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        400:
          description: Invalid input
        404:
          description: Product variation not found


    put:
      tags:
        - products
      summary: Update an existing product variation
      description: Modify the details of an existing product variation.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the variation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the variation
                price_modifier:
                  type: number
                  format: decimal
                  description: Price modifier for the variation
                product_state:
                  type: string
                  enum: ['available', 'unavailable']
                  description: Availability state of the variation
      responses:
        200:
          description: Product variation updated successfully
        400:
          description: Invalid input data
        404:
          description: Product variation not found
          
          
    delete:
      tags:
        - products
      summary: Delete a product variation
      description: Remove a product variation by its ID.
      parameters:
        - name: API-Version
          in: header
          required: true
          schema:
            type: string
            example: "1.0"
          description: Version of the API to use.
        - name: business_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the business
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product variation
      responses:
        204:
          description: Product variation deleted successfully (No Content)
        400:
          description: Invalid input data
        404:
          description: Product variation not found

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header